@model AccreditSolutions.Models.ViewModels.GitHubUserResultViewModel

@{ ViewBag.Title = "GitHub User Results"; }

<div class="user-header">
    <div class="user-info">
        <h2 class="page-title">GitHub User Details</h2>

        <div class="user-details">
            <h4 class="user-username"><strong>Username:</strong> @Model.Username</h4>
            @if (Model.Location != null && !string.IsNullOrWhiteSpace(Model.Location))
            {
                <h4 class="user-location"><strong>Location:</strong> @Model.Location</h4>
            }
        </div>
        </div>
        <div class="user-avatar">
            <img src="@Model.AvatarUrl" alt="User Avatar" />
        </div>
    </div>

<h3 class="repositories-title">Repositories</h3>

@if (Model.GitHubRepositories != null && Model.GitHubRepositories.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Repository Name</th>
                <th>Star Gazers</th>
                <th>Description</th>
                <th>Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repo in Model.GitHubRepositories)
            {
                <tr>
                    <td>@repo.RepositoryName</td>
                    <td>@repo.StarCount</td>
                    <td>@repo.Description</td>
                    <td><a href="@repo.RepositoryUrl" target="_blank">View Repository</a></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No repositories found.</p>
}

<div class="button-container">
    <a href="@Url.Action("RetrieveGitHubUser", "GitHubUserController")" class="btn btn-primary">Find Another User</a>
</div>

<style>
    .page-title {
        padding-top: 10px;
    }

    .user-header {
        display: flex;
        align-items: flex-end;
        justify-content: space-between;
        margin-bottom: 20px;
        border-bottom: 2px solid #ddd;
        padding-bottom: 20px;
        padding-top: 20px;
        position: relative;
    }

    .user-info {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    /* Flexbox for Username and Location to be on the same line */
    .user-details {
        display: flex;
        align-items: center;
        gap: 15px; /* Adds spacing between Username and Location */
    }


/*    .user-username {
        order: 1;
    }

    .user-location {
        padding-top: 10px;
        order: 2;
        padding-top: 0px;
        margin-bottom: 0px;
    }
*/
    .user-avatar {
        display: flex;
        align-items: flex-end;
    }

    .user-avatar img {
        width: 90px;
        height: 90px;
        border-radius: 50%;
        object-fit: cover;
        margin-left: 20px;
    }

    .user-info:has(.user-location) .username {
        margin-bottom: -10px;
    }

    .repositories-title {
        margin-top: 20px;
    }

    .button-container {
        margin-top: 20px;
        text-align: left;
    }

    .btn-primary {
        width: 25%;
    }

    p {
        color: black;
    }

    h4 {
        margin-bottom: 0px;
    }


</style>
